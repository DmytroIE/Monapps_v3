"""
Django settings for monapps project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from kombu import Exchange, Queue
from django.core.management.commands.runserver import Command as runserver

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-^rvt^va4@v3_*60+!vi%)t0#5xec0$g2x^@fa-!utsor&108=("

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_celery_beat",
    "rest_framework",
    "corsheaders",
    "treebeard",
    "apps.datatypes",
    "apps.applications",
    "apps.assets",
    "apps.datafeeds",
    "apps.datastreams",
    "apps.devices",
    "apps.dfreadings",
    "apps.dsreadings",
    "apps.nodes",
    "apps.mqtt_sub",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.AllowAny",
    ]
}

CORS_ORIGIN_ALLOW_ALL = True

ROOT_URLCONF = "monapps.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "monapps.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.environ.get("DB_NAME"),
        "USER": os.environ.get("DB_USER"),
        "PASSWORD": os.environ.get("DB_USER_PASSWORD"),
        "HOST": os.environ.get("DB_HOST"),
        "PORT": os.environ.get("DB_PORT"),
    },
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Custom settings

# Monitoring Application settings
NUM_MAX_DFREADINGS_TO_PROCESS = 50000
NUM_MAX_DSREADINGS_TO_PROCESS = 100000
MIN_T_RES_MS = 1000
MIN_T_INVOC_MS = 60000

# DS health monitoring settings
MAX_DS_TO_HEALTH_PROC = 100
T_DS_HEALTH_EVAL_MS = 5000  # 5 seconds, how often the ds health check procedure is executed
NEXT_EVAL_MARGIN_COEF = 1.5  # will be a multiplicator for t_update for periodic datastreams

# Asset/Site update settings
T_ASSET_UPD_MS = 5000  # 5 seconds, how often the asset update procedure is executed
MAX_SITES_TO_UPD = 10
MAX_ASSETS_TO_UPD = 100
MAX_DEVICES_TO_UPD = 50

# it is datetime(2999, 12, 31, 23, 59, 59, 999999, tzinfo=timezone.utc), something similar to Infinity
MAX_TS_MS = 32503679999999
TILL_NOW_MARGIN_MS = 0

# Celery settings
CELERY_BROKER_URL = "redis://localhost:6379/2"  # TODO: select a proper db number
CELERY_BEAT_SCHEDULER = "django_celery_beat.schedulers:DatabaseScheduler"

default_exchange = Exchange("default", type="direct")
evaluate_exchange = Exchange("evaluate", type="direct")
update_exchange = Exchange("update", type="direct")

CELERY_TASK_ROUTES = {
    "evaluate.*": {"queue": "evaluate", "routing_key": "evaluate"},
    "update.*": {"queue": "update", "routing_key": "update"},
}

CELERY_TASK_QUEUES = (
    Queue(name="default", exchange=default_exchange, routing_key="default"),
    Queue(name="evaluate", exchange=evaluate_exchange, routing_key="evaluate"),
    Queue(name="update", exchange=update_exchange, routing_key="update"),
)

CELERY_TASK_DEFAULT_QUEUE = "default"
CELERY_TASK_DEFAULT_EXCHANGE = "default"
CELERY_TASK_DEFAULT_ROUTING_KEY = "default"

CELERY_IMPORTS = ("tasks",)
CELERY_IGNORE_RESULT = True

# MQTT publisher settings
INSTANCE_ID = "test_instance"

runserver.default_port = 5000
